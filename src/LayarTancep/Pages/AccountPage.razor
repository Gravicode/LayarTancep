@page "/account"
@inject IJSRuntime IJS
@inject NavigationManager NavMgr
@inject IToastService toastService
@inject ChannelService ChannelSvc
@inject PostService PostSvc
@inject UserProfileService UserSvc
@inject SubscribeService SubscribeSvc
<div class="container-fluid pb-0">
    <AuthorizeView>
        <Authorized>
            <div class="row">
                <div class="col-md-12">
                    <div class="osahan-area text-center mt-3 mb-3">
                        <button @onclick="AddNewChannel" data-toggle="modal" data-target="#taskModal" class="btn btn-outline-primary">Buat Channel Baru</button>
                    </div>
                </div>
            </div>
        </Authorized>
    </AuthorizeView>
    <div class="row">
        <div class="col-xl-3 col-sm-6 mb-3">
            <div class="card text-white bg-primary o-hidden h-100 border-none">
                <div class="card-body">
                    <div class="card-body-icon">
                        <i class="fas fa-fw fa-users"></i>
                    </div>
                    <div class="mr-5"><b>@ListChannel.Count.ToString("n0")</b> Channels</div>
                </div>
                <a class="card-footer text-white clearfix small z-1" href="#" @onclick="NotAvailable" @onclick:preventDefault>
                    <span class="float-left">View Details</span>
                    <span class="float-right">
                        <i class="fas fa-angle-right"></i>
                    </span>
                </a>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 mb-3">
            <div class="card text-white bg-warning o-hidden h-100 border-none">
                <div class="card-body">
                    <div class="card-body-icon">
                        <i class="fas fa-fw fa-video"></i>
                    </div>
                    <div class="mr-5"><b>@ListFeatured.Count.ToString("n0")</b> Videos</div>
                </div>
                <a class="card-footer text-white clearfix small z-1" href="#" @onclick="NotAvailable" @onclick:preventDefault>
                    <span class="float-left">View Details</span>
                    <span class="float-right">
                        <i class="fas fa-angle-right"></i>
                    </span>
                </a>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 mb-3">
            <div class="card text-white bg-success o-hidden h-100 border-none">
                <div class="card-body">
                    <div class="card-body-icon">
                        <i class="fas fa-fw fa-list-alt"></i>
                    </div>
                    <div class="mr-5"><b>@CategoryCount.ToString("n0")</b> Categories</div>
                </div>
                <a class="card-footer text-white clearfix small z-1" href="#" @onclick="NotAvailable" @onclick:preventDefault>
                    <span class="float-left">View Details</span>
                    <span class="float-right">
                        <i class="fas fa-angle-right"></i>
                    </span>
                </a>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 mb-3">
            <div class="card text-white bg-danger o-hidden h-100 border-none">
                <div class="card-body">
                    <div class="card-body-icon">
                        <i class="fas fa-fw fa-cloud-upload-alt"></i>
                    </div>
                    <div class="mr-5"><b>@NewVideoCount.ToString("n0")</b> New Videos</div>
                </div>
                <a class="card-footer text-white clearfix small z-1" href="#" @onclick="NotAvailable" @onclick:preventDefault>
                    <span class="float-left">View Details</span>
                    <span class="float-right">
                        <i class="fas fa-angle-right"></i>
                    </span>
                </a>
            </div>
        </div>
    </div>
    <hr>
    <div class="video-block section-padding">
        <div class="row">
            <div class="col-md-12">
                <div class="main-title">
                    <div class="btn-group float-right right-action">
                        <a href="#" class="right-action-link text-gray" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Sort by <i class="fa fa-caret-down" aria-hidden="true"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="#" @onclick:preventDefault @onclick="()=>SetFilter(FilterTypes.Featured,FilterChannels.TopRated)"><i class="fas fa-fw fa-star"></i> &nbsp; Top Rated</a>
                            <a class="dropdown-item" href="#" @onclick:preventDefault @onclick="()=>SetFilter(FilterTypes.Featured,FilterChannels.TopViewed)"><i class="fas fa-fw fa-signal"></i> &nbsp; Viewed</a>
                      
                        </div>
                    </div>
                    <h6>My Videos</h6>
                </div>
            </div>
           
            <Virtualize Items="@ListFeatured" Context="item">
                <div @key="item.Id" class="col-xl-3 col-sm-6 mb-3">
                    <div class="video-card">
                        <div class="video-card-image">
                            <a class="play-icon" href="#"><i class="fas fa-play-circle"></i></a>
                            <a href="@($"video-page/{item.Id}")"><img class="img-fluid" src="@(string.IsNullOrEmpty(item.ImageUrls)?"img/v5.png":item.ImageUrls)" alt=""></a>
                            <div class="time">@(item.Duration != null ? $"{String.Format("{0:00}", item.Duration.Value.Hours)}:{String.Format("{0:00}", item.Duration.Value.Minutes)}:{String.Format("{0:00}", item.Duration.Value.Seconds)}" : "00:00")</div>
                        </div>
                        <div class="video-card-body">
                            <div class="video-title">
                                <a href="@($"video-page/{item.Id}")">@item.Title</a>
                            </div>
                            <div class="video-page text-success">
                                @item.Category  <a title="" data-placement="top" data-toggle="tooltip" href="#" data-original-title="Verified"><i class="fas fa-check-circle text-success"></i></a>
                            </div>
                            <div class="video-view">
                                @NumberHelper.FormatNumber(item.PostViews.Count) views &nbsp;<i class="fas fa-calendar-alt"></i> @DateHelper.GetElapsedTime(item.CreatedDate)
                            </div>
                        </div>
                    </div>
                </div>

            </Virtualize>
        </div>
    </div>
    <hr class="mt-0">
    <div class="video-block section-padding">
        <div class="row">
            <div class="col-md-12">
                <div class="main-title">
                    <div class="btn-group float-right right-action">
                        <a href="#" class="right-action-link text-gray" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Sort by <i class="fa fa-caret-down" aria-hidden="true"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="#" @onclick:preventDefault @onclick="()=>SetFilter(FilterTypes.Channel,FilterChannels.TopRated)"><i class="fas fa-fw fa-star"></i> &nbsp; Top Rated</a>
                            <a class="dropdown-item" href="#" @onclick:preventDefault @onclick="()=>SetFilter(FilterTypes.Channel,FilterChannels.TopViewed)"><i class="fas fa-fw fa-signal"></i> &nbsp; Viewed</a>
                           
                        </div>
                    </div>
                    <h6>My Channels</h6>
                </div>
            </div>
            <Virtualize Items="@ListChannel" Context="item">
                <div @key="item.Id" class="col-xl-3 col-sm-6 mb-3">
                    <div class="channels-card">
                        <div class="channels-card-image">
                            <a href="@($"/single-channel/{item.Id}")"><img class="img-fluid" src="@(string.IsNullOrEmpty(item.PicUrl)?"img/s1.png":item.PicUrl)" alt=""></a>
                            <div class="channels-card-image-btn"><button type="button" class="btn btn-danger btn-sm">Subscribers <strong>@NumberHelper.FormatNumber(item.Subscribers.Count)</strong></button></div>
                            @if (HasLogin && item.UserName == UserName)
                            {
                                <div class="channels-card-image-btn"><button type="button" @onclick="(() => PrepareForEdit(item))" data-toggle="modal" data-target="#taskModal" class="btn btn-outline-success btn-sm"> Ubah </button></div>
                                <div class="channels-card-image-btn"><button type="button" @onclick="(() => PrepareForDelete(item))" data-toggle="modal" data-target="#confirmDeleteModal" class="btn btn-outline-warning btn-sm"> Hapus </button></div>
                            }
                        </div>
                        <div class="channels-card-body">
                            <div class="channels-title">
                                <a href="@($"/single-channel/{item.Id}")">@item.Name</a>
                            </div>
                            <div class="channels-view">
                                @item.Subscribers.Count.ToString("n0") subscribers
                            </div>
                        </div>
                    </div>
                </div>
            </Virtualize>
           
           
        </div>
    </div>
</div>

<ConfirmDialog OnClick="@Delete" />
<ChannelDetail @ref="detail" TaskObject=@itemObject DataChanged="@DataChanged">
    <CustomHeader>@customHeader</CustomHeader>
</ChannelDetail>
@code {
    int CategoryCount = 0;
    int NewVideoCount = 0;
    string customHeader = "Tambah Channel";
    public Channel itemObject { get; set; } = new();
    ChannelDetail detail;
    public string FilterChannel { get; set; } = FilterChannels.TopViewed;
    public string FilterFeatured { get; set; } = FilterChannels.TopViewed;
    public UserProfile SelUser { get; set; }
    string UserName { set; get; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    public List<Channel> ListChannel { get; set; } = new();
    public List<Post> ListFeatured { get; set; } = new();

    bool HasLogin = false;
    void NotAvailable()
    {
        toastService.ShowWarning("Fitur belum tersedia.");
    }
    private async Task Delete()
    {
        var task = ChannelSvc.DeleteData(itemObject.Id);
        await IJS.InvokeAsync<object>("CloseModal", "confirmDeleteModal");
        LoadData();
        itemObject = new() { Id=0 };
    }
    private async void DataChanged()
    {
        LoadData();
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {

        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;
            SelUser = UserSvc.GetItemByUsername(UserName);
            HasLogin = true;
        }
        LoadData();
    }
    protected override async Task OnParametersSetAsync()
    {
        LoadData();
    }
    public enum FilterTypes { Channel, Featured }
    void SetFilter(FilterTypes filterType, string Filter)
    {
        if (filterType == FilterTypes.Channel)
        {
            FilterChannel = Filter;
        }
        else
        {
            FilterFeatured = Filter;
        }
        LoadData();
    }
    private void PrepareForDelete(Channel item)
    {
        itemObject = item;
    }
    void LoadData()
    {
        ListChannel = ChannelSvc.GetAllData(FilterChannel, SelUser.Username);
        ListFeatured = PostSvc.GetAllData(FilterFeatured,SelUser.Username) ;
        if(ListFeatured.Any())
            CategoryCount = ListFeatured.Select(x => x.Category).Distinct().Count();
        var LastMonth = DateHelper.GetLocalTimeNow().AddMonths(-1);
        NewVideoCount = ListFeatured.Where(x => x.CreatedDate > LastMonth).Count();
    }

    async Task OpenChannel(Channel item)
    {
        NavMgr.NavigateTo($"/single-channel/{item.Id}");
    }

   
    private void PrepareForEdit(Channel item)
    {
        customHeader = "Ubah Channel";
        itemObject = item;

    }
    async Task AddNewChannel()
    {
        customHeader = "Tambah Channel";
        itemObject = new Channel();
        itemObject.CreatedDate = DateHelper.GetLocalTimeNow();
        itemObject.UserId = SelUser.Id;
        itemObject.UserName = SelUser.Username;
    }
}
