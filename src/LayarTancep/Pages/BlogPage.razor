@page "/blog"
@page "/blog/{Keyword}"
@page "/blog/tags/{Tag}"
@page "/blog/category/{Category}"
@inject IJSRuntime IJS
@inject BlogService BlogSvc
@inject UserProfileService service
@inject NavigationManager NavMgr
@inject IToastService toastService

<div class="container-fluid">
    <section class="blog-page section-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="main-title">
                        <div class="btn-group float-right right-action">
                            <a aria-expanded="false" aria-haspopup="true" data-toggle="dropdown" class="right-action-link text-gray" href="#">
                                Sort by <i aria-hidden="true" class="fa fa-caret-down"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right">
                                <a href="#" class="dropdown-item"><i class="fas fa-fw fa-star"></i> &nbsp; Top Rated</a>
                                <a href="#" class="dropdown-item"><i class="fas fa-fw fa-signal"></i> &nbsp; Viewed</a>
                                <a href="#" class="dropdown-item"><i class="fas fa-fw fa-times-circle"></i> &nbsp; Close</a>
                            </div>
                        </div>
                        <h6>Blog</h6>
                    </div>
                </div>
                <div class="col-md-8">
                    @if (LatestBlogs != null)
                        @foreach (var item in LatestBlogs)
                        {
                            <div class="card blog mb-4">
                                <div class="blog-header">
                                    <a href="@($"blog-detail/{item.Id}")"><img class="card-img-top" src="@(string.IsNullOrEmpty(item.ImageUrl)?"img/blog/1.png":item.ImageUrl)" alt="Card image cap"></a>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title"><a href="@($"blog-detail/{item.Id}")">@item.Title</a></h5>
                                    <div class="entry-meta">
                                        <ul class="tag-info list-inline">
                                            <li class="list-inline-item"><a href="#"><i class="fas fa-calendar"></i>  @item.CreatedDate.ToString("MMMM dd, yyyy")</a></li>
                                            <li class="list-inline-item"><i class="fas fa-folder"></i> <a rel="category tag" href="#" @onclick="()=>SearchByCategory(item.Category)" @onclick:preventDefault>@item.Category</a></li>
                                            <li class="list-inline-item">
                                                <i class="fas fa-tag"></i>
                                                @if (!string.IsNullOrEmpty(item.Tags))
                                                    @foreach (var tag in item.Tags.Split(','))
                                                    {
                                                        <a rel="tag" href="#" @onclick="()=>SearchByTag(tag)" @onclick:preventDefault>@tag</a>

                                                        @(",")
                                                    }
                                            </li>
                                            <li class="list-inline-item"><i class="fas fa-comment"></i> <a href="#">@item.BlogComments.Count.ToString("n0") Comments</a></li>
                                        </ul>
                                    </div>
                                    <p class="card-text">
                                        @(item.Body.Length > 100 ? (MarkupString)item.Body.Substring(0, 100) : (MarkupString)item.Body)
                                    </p>
                                    <a href="@($"blog-detail/{item.Id}")">LANJUT BACA <span class="fas fa-chevron-right"></span></a>
                                </div>
                            </div>
                        }


                    <ul style="display:none" class="pagination justify-content-center mt-4 pagination-sm">
                        <li class="page-item disabled">
                            <span class="page-link">Previous</span>
                        </li>
                        <li class="page-item"><a href="#" class="page-link">1</a></li>
                        <li class="page-item active">
                            <span class="page-link">
                                2
                                <span class="sr-only">(current)</span>
                            </span>
                        </li>
                        <li class="page-item"><a href="#" class="page-link">3</a></li>
                        <li class="page-item">
                            <a href="#" class="page-link">Next</a>
                        </li>
                    </ul>
                </div>
                <div class="col-md-4">
                    <div class="card sidebar-card mb-4">
                        <div class="card-body">
                            <div class="input-group">
                                <input type="text" @bind="Keyword" @onkeyup="KeyUp" placeholder="Search For" class="form-control">
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-secondary" @onclick="LoadData">Search <i class="fas fa-arrow-right"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card sidebar-card mb-4">
                        <div class="card-body">
                            <h5 class="card-title mb-3">Categories</h5>
                            <ul class="sidebar-card-list">
                                @foreach(var cat in ListCategory)
                                {
                                    <li><a href="#" @onclick="()=>SearchByCategory(cat)" @onclick:preventDefault><i class="fas fa-chevron-right"></i> @cat</a></li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="card sidebar-card mb-4">
                        <div class="card-body">
                            <h5 class="card-title mb-3">Archives</h5>
                            <ul class="sidebar-card-list">
                                @foreach(var mon in ListMonth)
                                {
                                    <li><a href="#" @onclick="()=>SearchByMonth(mon)" @onclick:preventDefault><i class="fas fa-chevron-right"></i> @mon.Name</a></li>
                                }
                          
                            </ul>
                        </div>
                    </div>
                    <div class="card sidebar-card mb-4">
                        <div class="card-body">
                            <h5 class="card-title mb-3">Tags</h5>
                            <div class="tagcloud">
                                @foreach (var tag in ListTag)
                                {
                                    <a class="tag-cloud-link" @onclick="()=>SearchByTag(tag)" @onclick:preventDefault href="#">@tag</a>
                                 
                                }
                               
                              
                            </div>
                        </div>
                    </div>
                    <div style="display:none" class="card sidebar-card mb-4">
                        <div class="card-body">
                            <h5 class="card-title mb-4">Newsletter</h5>
                            <div class="input-group">
                                <input type="text" placeholder="Your email address" class="form-control">
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-secondary">Sign up <i class="fas fa-arrow-right"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="display:none" class="card sidebar-card mb-4">
                        <div class="card-body">
                            <h5 class="card-title mb-3">Meta</h5>
                            <ul class="sidebar-card-list">
                                <li><a href="#"><i class="fas fa-chevron-right"></i> Log in</a></li>
                                <li><a href="#"><i class="fas fa-chevron-right"></i> Entries RSS</a></li>
                                <li><a href="#"><i class="fas fa-chevron-right"></i> Comments RSS</a></li>
                                <li><a href="#"><i class="fas fa-chevron-right"></i> WordPress.org</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@code {
    public List<string> ListCategory { get; set; } = new();
    public List<string> ListTag { get; set; } = new();
    public List<MonthBlog> ListMonth { get; set; } = new();
    UserProfile SelUser = new UserProfile();
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string UserName;
    public List<Blog> FeaturedBlogs { get; set; }
    public List<Blog> TrendingBlogs { get; set; }
    public List<Blog> LatestBlogs { get; set; }
    [Parameter]
    public string Keyword { get; set; }

    [Parameter]
    public string Tag { get; set; }
    [Parameter]
    public string Category { get; set; }

    List<string> Tags = new();
    protected override async Task OnInitializedAsync()
    {

        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;
            SelUser = service.GetItemByUsername(UserName);

        }
        FeaturedBlogs = BlogSvc.GetFeatured();
        TrendingBlogs = BlogSvc.GetTrending();
        Tags = BlogSvc.GetTags();
        LoadData();

    }
    private void KeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            //if (!string.IsNullOrWhiteSpace(Keyword))
            {
                Tag = string.Empty;
                LoadData();
            }
        }
    }
    void SearchByTag(string tag)
    {
        Tag = tag;
        Category = string.Empty;
        LatestBlogs = BlogSvc.GetByTag(Tag);
    }
    void SearchByCategory(string Cat)
    {
        Category = Cat;
        Tag = string.Empty;
        LatestBlogs = BlogSvc.GetByCategory(Tag);
    }
    void SearchByMonth(MonthBlog item)
    {
        LatestBlogs = BlogSvc.GetByMonthYear(item.Month, item.Year);
    }
    void LoadData()
    {
        if (!string.IsNullOrEmpty(Tag))
        {
            SearchByTag(Tag);

        }
        else if (!string.IsNullOrEmpty(Category))
        {

            SearchByCategory(Category);
        }
        else
        {
            LatestBlogs = BlogSvc.GetLatest(Keyword);
        }
        var tagset = new HashSet<string>();
        var categoryset = new HashSet<string>();
        LatestBlogs.Select(x => x.Tags).ToList().ForEach(x =>
        {
            var tags = x.Split(',');
            foreach (var tag in tags)
                if (!tagset.Contains(tag.Trim()))
                {
                    tagset.Add(tag.Trim());
                }

        });
        LatestBlogs.Select(x => x.Category).ToList().ForEach(category =>
        {
            if (!categoryset.Contains(category.Trim()))
            {
                categoryset.Add(category.Trim());
            }
        });
        ListTag = tagset.ToList();
        ListCategory = categoryset.ToList();
        ListMonth = LatestBlogs.Select(x => new MonthBlog() { Name = x.CreatedDate.ToString("MMMM yyyy"), Month = x.CreatedDate.Month, Year = x.CreatedDate.Year }).ToList();
        ListMonth = (
            from p in ListMonth
            group p by p.Name into g
            select new MonthBlog { Name = g.Key, Month = g.First().Month, Year = g.First().Year }
            ).ToList();
    }
}
