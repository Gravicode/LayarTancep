@page "/history-page"
@inject IJSRuntime IJS
@inject NavigationManager NavMgr
@inject IToastService toastService
@inject ChannelService ChannelSvc
@inject PostService PostSvc
@inject UserProfileService UserSvc
@inject HistoryService HistorySvc

<div class="container-fluid">
    <div class="video-block section-padding">
        <div class="row">
            <div class="col-md-12">
                <div class="main-title">
                    <div class="btn-group float-right right-action">
                        <a href="#" class="right-action-link text-gray" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Sort by <i class="fa fa-caret-down" aria-hidden="true"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" href="#"><i class="fas fa-fw fa-star"></i> &nbsp; Top Rated</a>
                            <a class="dropdown-item" href="#"><i class="fas fa-fw fa-signal"></i> &nbsp; Viewed</a>
                            <a class="dropdown-item" href="#"><i class="fas fa-fw fa-times-circle"></i> &nbsp; Close</a>
                        </div>
                    </div>
                    <h6>Watch History</h6>
                </div>
            </div>
            <Virtualize Items="@ListHistory" Context="item">
                <div @key="item.Id" class="col-xl-3 col-sm-6 mb-3">
                    <div class="video-card history-video">
                        <div class="video-card-image">
                            <a class="video-close" href="#"><i class="fas fa-times-circle"></i></a>
                            <a class="play-icon" href="#"><i class="fas fa-play-circle"></i></a>
                            <a href="@($"video-page/{item.Post.Id}")"><img class="img-fluid" src="@(string.IsNullOrEmpty(item.Post.ImageUrls)?"img/v1.png":item.Post.ImageUrls)" alt=""></a>
                            <div class="time">@(item.Post.Duration != null ? $"{String.Format("{0:00}", item.Post.Duration.Value.Hours)}:{String.Format("{0:00}", item.Post.Duration.Value.Minutes)}:{String.Format("{0:00}", item.Post.Duration.Value.Seconds)}" : "00:00")</div>
                        </div>
                        <div class="progress">
                            <div class="progress-bar" role="progressbar" style="width: @GetProgress(item.LastWatch,item.Post.Duration.Value)%;" aria-valuenow="@GetProgress(item.LastWatch,item.Post.Duration.Value)" aria-valuemin="0" aria-valuemax="100">@($"{item.LastWatch.Hours}:{item.LastWatch.Minutes}:{item.LastWatch.Seconds}")</div>
                        </div>
                        <div class="video-card-body">
                            <div class="video-title">
                                <a href="@($"video-page/{item.Post.Id}")">@item.Post.Title</a>
                            </div>
                            <div class="video-page text-success">
                                @item.Post.Category  <a title="" data-placement="top" data-toggle="tooltip" href="#" data-original-title="Verified"><i class="fas fa-check-circle text-success"></i></a>
                            </div>
                            <div class="video-view">
                                @NumberHelper.FormatNumber(item.Post.PostViews.Count) views &nbsp;<i class="fas fa-calendar-alt"></i> @DateHelper.GetElapsedTime(item.Post.CreatedDate)
                            </div>
                        </div>
                    </div>
                </div>
            </Virtualize>

            <nav style="display:none" aria-label="Page navigation example">
                <ul class="pagination justify-content-center pagination-sm mb-0">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1">Previous</a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
        </div>
</div>
@code {

    public UserProfile SelUser { get; set; }
    string UserName { set; get; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public List<History> ListHistory { get; set; } = new();
    bool HasLogin = false;


    [CascadingParameter]
    public MainLayout Layout { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;
            SelUser = UserSvc.GetItemByUsername(UserName);
            HasLogin = true;
        }
        LoadData();
    }

    async void LoadData()
    {
       
        ListHistory = HistorySvc.GetHistory(SelUser.Username);
       
    }
   
    async Task OpenChannel(Channel item)
    {
        NavMgr.NavigateTo($"/single-channel/{item.Id}");
    }

    int GetProgress(TimeSpan LastWatch, TimeSpan Duration)
    {
        var Pct = LastWatch.TotalSeconds / Duration.TotalSeconds * 100;
        return (int)Pct;
    }

}
