@inject IJSRuntime IJS
@inject NavigationManager NavMgr
@inject UserProfileService Userservice
@inject IToastService Toast
@inject NotificationService NotificationSvc
@inject SubscribeService SubscribeSvc

<ul class="sidebar navbar-nav">
    <li class="nav-item active">
        <a class="nav-link" href="index">
            <i class="fas fa-fw fa-home"></i>
            <span>Home</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="channels">
            <i class="fas fa-fw fa-users"></i>
            <span>Channels</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="single-channel">
            <i class="fas fa-fw fa-user-alt"></i>
            <span>Single Channel</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="video-page">
            <i class="fas fa-fw fa-video"></i>
            <span>Video Page</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="upload-video">
            <i class="fas fa-fw fa-cloud-upload-alt"></i>
            <span>Upload Video</span>
        </a>
    </li>
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="fas fa-fw fa-folder"></i>
            <span>Misc</span>
        </a>
        <div class="dropdown-menu">            
            <h6 class="dropdown-header">Other Info:</h6>
            <a class="dropdown-item" href="blog">Blog</a>
            <a class="dropdown-item" href="blog-detail">Blog Detail</a>    
            <a class="dropdown-item" href="contact">Contact</a>
        </div>
    </li>
    <AuthorizeView>
        <Authorized>
            <li class="nav-item">
                <a class="nav-link" href="history-page">
                    <i class="fas fa-fw fa-history"></i>
                    <span>History Page</span>
                </a>
            </li>
        </Authorized>
    </AuthorizeView>

    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="categories" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="fas fa-fw fa-list-alt"></i>
            <span>Categories</span>
        </a>
        <div class="dropdown-menu">
            @foreach (var item in ChannelCategories.Categories)
            {
                <a class="dropdown-item" href="@($"/channels/{item}")">@item</a>

            }
        </div>
    </li>
    <li class="nav-item channel-sidebar-list">
        <h6>SUBSCRIPTIONS</h6>
        <ul>
            @if (ListSubscribe != null)
                @foreach (var item in ListSubscribe)
                {
                    <li>
                        <a href="@($"single-channel/{item.Channel.Id}")">
                            <img class="img-fluid" alt="" src="@(string.IsNullOrEmpty(item.Channel.PicUrl)?"img/s1.png":item.Channel.PicUrl)"> @item.Channel.Name
                        </a>
                    </li>
                }
        </ul>
    </li>
</ul>
@code {
    bool HasLogin = true;
    string UserName { set; get; }
    public UserProfile SelUser { get; set; }
    public List<Subscribe> ListSubscribe { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {

        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;
            HasLogin = Userservice.GetUserRole(UserName) != Roles.User;
            SelUser = Userservice.GetItemByUsername(UserName);
            ListSubscribe = SubscribeSvc.GetAllData(UserName);
        }

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {


        }

        //await jsRuntime.InvokeAsync<object>("setMenuStyle");
    }
}
