@inject IJSRuntime IJS
<video id="@VideoId"
       class="video-js"
       controls
       preload="auto"
    
       poster="@PosterUrl"
       data-setup="{}">
       
    @foreach (var videoUrl in VideoUrls)
    {
        @if (!string.IsNullOrEmpty(videoUrl))
        {
            <source src="@videoUrl" type="video/@(Path.GetExtension(videoUrl).Replace(".",string.Empty))" />
        }
     
    }
    <p class="vjs-no-js">
        To view this video please enable JavaScript, and consider upgrading to a
        web browser that
        <a href="https://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
</video>
@code {
    //SetVideoFluid
    public string VideoId { get; set; } = $"my-video-{Tools.NumberGen.GenerateNumber(5)}";
    [Parameter]
    public string PosterUrl { get; set; } = "MY_VIDEO_POSTER.jpg";
    [Parameter]
    public List<string> VideoUrls { get; set; } = new() { };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {


        if (firstRender)
        {
            await IJS.InvokeVoidAsync("SetVideoFluid", VideoId);
        }

    }
}

